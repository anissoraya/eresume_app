<%= form_for(skill) do |f| %>
  <% if skill.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(skill.errors.count, "error") %> prohibited this skill from being saved:</h2>

      <ul>
      <% skill.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :title, class:'col-sm-2 control-label' %>
    <div class="col-sm-10">
      <%= f.text_field :title, class: 'form-control', autofocus: true, required: true %>
      <br>
    </div>
  </div>

  <div class="field">
    <%= f.label :rate, class:'col-sm-2 control-label' %>
    <div class="col-sm-4">
      <%= f.select :rate, options_for_select({ "Beginner" => 1, "Intermediate" => 3, "Expert" => 5 }, selected: f.object.rate), {}, class: 'form-control' %>
      <br>
    </div>
  </div>

  <div class="form-group">
    <div class="col-sm-offset-2 col-sm-10">
      <div class="pull-right">
        <%= f.submit 'Save', class: 'btn btn-primary' %>
      </div>
    </div>
  </div>
<% end %>
<script type='text/javascript'>
/*
$( document ).ready(function () {
  $( "#new_skill" ).validate( {
    rules: {
      title: {required: true}

    },
    messages: {
      title: "Title can't be blank"


    },
    errorElement: "em",
    errorPlacement: function ( error, element ) {
      // Add the `help-block` class to the error element
      error.addClass( "help-block" );

      if ( element.prop( "type" ) === "checkbox" ) {
        error.insertAfter( element.parent( "label" ) );
      } else {
        error.insertAfter( element );
      }

    },
    highlight: function ( element, errorClass, validClass ) {
      $( element ).parents( ".col-sm-10, .col-sm-4" ).addClass( "has-error" ).removeClass( "has-success" );
    },
    unhighlight: function (element, errorClass, validClass) {
      $( element ).parents( ".col-sm-10, .col-sm-4" ).addClass( "has-success" ).removeClass( "has-error" );
    }
  });
});
*/
</script>
